{"version":3,"sources":["Socket.js","Components/Infobar.js","Components/Input.js","Components/Message.js","Components/Messages.js","Components/TextContainer.js","Components/Chat.js","Components/Join.js","App.js","index.js"],"names":["socket","io","SocketContext","createContext","Infobar","room","className","href","Input","message","setMessage","sendMessage","type","placeholder","value","onChange","event","target","onKeyPress","key","onClick","Message","user","text","isSentByCurrentUser","trimName","name","trim","toLowerCase","Messages","messages","map","i","TextContainer","users","length","Chat","location","useState","setRoom","setName","setMessages","setUsers","useContext","useEffect","queryString","parse","search","emit","error","alert","on","off","console","log","preventDefault","Join","to","App","Provider","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.117f880a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nimport io from 'socket.io-client';\r\n// url of the backend server\r\n// heroku server\r\nconst SERVER = \"https://minh-chat2.herokuapp.com/\";\r\n// local host\r\n// const SERVER = \"http://127.0.0.1:4002\";\r\nexport const socket = io(SERVER);\r\nexport const SocketContext = createContext(socket);","import React from 'react';\r\nimport '../Css/Infobar.css';\r\n\r\nexport const Infobar = ({room}) => {\r\n    return (\r\n        <div className=\"infoBar\">\r\n            <div className=\"leftInnerContainer\">\r\n                <h3>Code: {room}</h3>\r\n            </div>\r\n            <div className=\"rightInnerContainer\">\r\n                <a href=\"/\">Leave Room</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../Css/Input.css';\r\n\r\nexport const Input = ({ message, setMessage, sendMessage }) => {\r\n    return (\r\n        <form className=\"form\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"message...\"\r\n                value={message}\r\n                onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event) : null}\r\n            />\r\n            <button className=\"sendButton\" onClick={(event => sendMessage(event))}>Send</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport '../Css/Message.css';\r\n\r\nexport const Message = ({message: {user, text}, name}) => {\r\n    let isSentByCurrentUser = false;\r\n\r\n    const trimName = name.trim().toLowerCase();\r\n\r\n    // checks if the message is sent by the current user\r\n    if(user === trimName) {\r\n        isSentByCurrentUser = true;\r\n    }\r\n\r\n    // if message sent by current user display a blue background on the text\r\n    // else display a white background to show the text sent by another user\r\n    return (\r\n        isSentByCurrentUser ? (\r\n            <div className=\"messageContainer justifyEnd\">\r\n                <p className=\"sendText pr-10\">{trimName}</p>\r\n                <div className=\"messageBox backgroundBlue\">\r\n                    <p className=\"messageText colorwhite\">{text}</p>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div className=\"messageContainer justifyStart\">\r\n                <div className=\"messageBox backgroundLight\">\r\n                    <p className=\"messageText colorDark\">{text}</p>\r\n                </div>\r\n                <p className=\"sendText pl-10\">{user}</p>\r\n            </div>\r\n        )\r\n    )\r\n}","import React from 'react'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { Message } from './Message.js';\r\n\r\nimport '../Css/Messages.css';\r\n\r\nexport const Messages = ({ messages, name }) => {\r\n    return (\r\n        <ScrollToBottom className=\"messages\">\r\n            {messages.map((message, i) =>\r\n                <div key={i}>\r\n                    <Message message={message} name={name} />\r\n                </div>\r\n            )}\r\n        </ScrollToBottom>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport '../Css/TextContainer.css';\r\n\r\nexport const TextContainer = ({users}) => {\r\n    return (\r\n        <div className=\"textContainer\">\r\n            {\r\n                users ? (\r\n                    <div>\r\n                        <h2>{`People in the room: ${users.length}`}</h2>\r\n                        <div>\r\n                            <h3>\r\n                                {users.map((user) => {\r\n                                    return (\r\n                                        <div key={user.name} className=\"activeItem\">\r\n                                            {user.name}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                ) : <h1>Loading...</h1>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport queryString from 'query-string';\r\nimport { SocketContext } from '../Socket.js';\r\n\r\nimport { Infobar } from './Infobar.js';\r\nimport { Input } from './Input.js';\r\nimport { Messages } from './Messages.js';\r\nimport { TextContainer } from './TextContainer.js';\r\n\r\nimport '../Css/Chat.css';\r\n\r\nexport const Chat = ({ location }) => {\r\n    const [room, setRoom] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [users, setUsers] = useState(\"\");\r\n\r\n    const socket = useContext(SocketContext); // socket instance\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);  // parses the url\r\n        setName(name);  // sets client's name\r\n        setRoom(room);  // sets client's room\r\n\r\n        // emits to server if an error appeared\r\n        socket.emit('join', { name, room }, (error) => {\r\n            if (error) alert(error);\r\n        })\r\n\r\n    }, [location.search, socket])\r\n\r\n    useEffect(() => {\r\n        // updates messages to include the new message\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message]);\r\n        });\r\n\r\n        // updates the room to include new user\r\n        socket.on('roomData', ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('message');\r\n            socket.off('roomData');\r\n        };\r\n    }, [messages, socket]);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        // resets the message input after sending it to server\r\n        if (message) {\r\n            socket.emit('sendMessage', message, () => {\r\n                setMessage('');\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            {console.log(users)}\r\n            <TextContainer users={users} />\r\n            <div className=\"container\">\r\n                <Infobar room={room} />\r\n                <Messages messages={messages} name={name} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Css/Join.css';\r\n\r\nexport const Join = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Chat</h1>\r\n                <input\r\n                    placeholder=\"Name\"\r\n                    className=\"joinInput\"\r\n                    type=\"text\"\r\n                    onChange={(event) => setName(event.target.value)}\r\n                />\r\n                <input\r\n                    placeholder=\"Room\"\r\n                    className=\"joinInput mt-20\"\r\n                    type=\"text\"\r\n                    onChange={(event) => setRoom(event.target.value)}\r\n                />\r\n                <Link onClick={(event) => (!name || !room ? event.preventDefault() : null)} to={`/chat?name=${name}&room=${room}`}>\r\n                    <button className=\"button mt-20\" type=\"submit\">Join</button>\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { SocketContext, socket } from './Socket.js';\n\nimport { Chat } from './Components/Chat.js';\nimport {Join } from './Components/Join.js';\n\nfunction App() {\n  return (\n    <SocketContext.Provider value={socket}>\n      <Router basename=\"/MChat\">\n        <Route exact path=\"/\" component={Join} />\n        <Route path=\"/chat\" component={Chat} />\n      </Router>\n    </SocketContext.Provider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}